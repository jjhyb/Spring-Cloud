### 定义应用名称
spring.application.name=spring-cloud-stream-kafka

### 配置 Web 服务端口
server.port=8080 

### Management 安全失效
management.endpoints.web.exposure.include=*

### 配置需要的kafka topic 主题
kafka.topic=test

### Spring Kafka 配置信息
spring.kafka.bootstrap-servers=localhost:9092

### Kafka 生产者配置
spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

### Kafka 消费者配置
spring.kafka.consumer.group-id=yibo-1
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
### 发现一个问题，下面这样配置也可以，为何？
#spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


### 定义Spring Cloud Stream Source 消息去向
### 针对 Kafka 而言，基本模式如下
#spring.cloud.stream.bindings.${channel-name}.destination=${kafka.topic}
spring.cloud.stream.bindings.output.destination=${kafka.topic}
spring.cloud.stream.bindings.yibo.destination=yibo

spring.cloud.stream.bindings.output..content-type=text/plain

### 定义Spring Cloud Stream Sink 消息接收
spring.cloud.stream.bindings.input.destination=${kafka.topic}
#spring.cloud.stream.bindings.yibo.destination=yibo

#spring.cloud.stream.bindings.output.binder=kafka